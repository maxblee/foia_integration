{
  "version": 3,
  "file": "foia-request.css",
  "sources": [
    "../../precompiles/svelte/foia-request/App.svelte",
    "../../precompiles/svelte/foia-request/Recipient.svelte",
    "../../precompiles/svelte/foia-request/RecipientField.svelte",
    "../../precompiles/svelte/foia-request/Request.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Cookies from \"js-cookie\"\n  import * as Papa from \"papaparse\"\n  import { recipients, count, start, sources, request, errors } from './store.js'\n  import Recipient from './Recipient.svelte'\n  import Request from './Request.svelte'\n\n  let states = fetch('/api/current-user/states')\n    .then((response) => response.json())\n    .then((data) => data.states)\n    .catch((e) => {\n      console.error(e)\n    })\n\n  let uploadData\n  const csrfToken = Cookies.get(\"csrftoken\")\n\n  async function handleUpload(event) {\n    let file = event.target.files[0]\n    let idx = $recipients.length - 1\n    // from https://stackoverflow.com/questions/56427009/how-to-return-papa-parsed-csv-via-promise-async-await\n    const res = new Promise((resolve, reject) => {\n\n      Papa.parse(file, {\n        header: true,\n        skipEmptyLines: true,\n        step: function (results) {\n          if (\n            Object.keys(results.data).every((d) =>\n              Object.keys(start).includes(d)\n            )\n          ) {\n            if (!Object.entries($recipients[idx]).every((d) => d[1].value === start[d[0]].value)) {\n              idx += 1\n              recipients.addItem()\n              sources.addItem()\n              errors.addItem()\n            }\n          } else {\n            reject(new Error('invalid field'))\n          }\n          for (let field of Object.keys(results.data)) {\n            recipients.changeItem($recipients, idx, field, results.data[field])\n          }\n        },\n        complete: function () {\n          resolve()\n        },\n        error: function (err) {\n          reject(err)\n        },\n      })\n    })\n    uploadData = res\n  }\n\n  async function handleFormSubmission(e) {\n    const postUrl = `/api/current-user/foia/${e.submitter.name}`;\n    const readableEntry = (content) => {\n      const output = {}\n      Object.entries(content)\n        .forEach((d) => {output[d[0]] = d[1].value})\n      return output\n    }\n    await fetch(postUrl, {\n      method: \"POST\",\n      mode: \"same-origin\",\n      headers: {\n        \"X-CSRFToken\": csrfToken,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        requestContent: readableEntry($request),\n        recipientContent: $recipients.map((d) => readableEntry(d)),\n        numItems: $count\n      })\n    }).then((response) => response.json())\n    .then((results) => {\n      if (results.status === \"error\") {\n        errors.changeAll({requestErrors: results.requestErrors, recipientErrors: results.recipientErrors})\n      } else {\n        e.target.submit()\n      }\n    })\n    .catch((err) => {console.error(err);})\n  }\n</script>\n\n<style>\n  .form__container {\n    max-width: 95%;\n    margin: auto;\n  }\n\n  .section__container {\n    padding: 5px;\n    margin-bottom: 5px;\n    font-size: 1.2rem;\n  }\n\n  h2 {\n    text-align: center;\n  }\n\n  @media screen and (min-width: 600px) {\n    .form__container {\n      width: 80%;\n    }\n  }\n\n  .upload__container {\n    display: flex;\n    justify-content: center;\n    padding: 10px;\n    font-size: 1.2rem;\n    flex-direction: column;\n    align-items: center;\n  }\n  .upload__container > input {\n    font-size: 1.2rem;\n    padding: 5px;\n  }\n\n  .section__container > p {\n    margin: 0;\n    text-align: center;\n  }\n\n  .submit__container {\n    display: flex;\n    justify-content: space-around;\n    margin-bottom: 1.4rem;\n  }\n  \n  .submit__item {\n    padding: 5px;\n  }\n\n  .submit__item > input {\n    font-size: 1.1rem;\n  }\n</style>\n\n<form method=\"POST\" action=\"/\" on:submit|preventDefault={handleFormSubmission}>\n  <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrfToken}>\n  <div class=\"form__container\">\n    <div class=\"section__container\">\n      <h2>Information about the Request</h2>\n      <Request />\n    </div>\n    <div class=\"section__container\">\n      <h2>Information about the Recipients</h2>\n      <p>You can manually add the agencies or you can upload a CSV.</p>\n      <div class=\"upload__container\">\n        <label for=\"csv_upload\">Upload a CSV file</label>\n        <input\n          type=\"file\"\n          id=\"csv_upload\"\n          accept=\".csv\"\n          on:change={handleUpload} />\n        <div class=\"upload__info\">\n        {#if uploadData !== undefined}\n          {#await uploadData}\n            <p>Loading</p>\n          {:then result}\n            <p>Finished</p>\n          {:catch error}\n            <p>\n              Could not process file. Make sure it is a .csv file with the\n              correct fields.\n            </p>\n          {/await}\n        {/if}\n      </div>\n    </div>\n    {#each $recipients as _recipient, idx}\n      <Recipient {states} {idx} />\n    {/each}\n  </div>\n  <div class=\"submit__container\">\n    <div class=\"submit__item\">\n      <input\n        type=\"submit\"\n        name=\"send\"\n        id=\"id_send-requests\"\n        value=\"Send Requests\" />\n    </div>\n    <div class=\"submit__item\">\n      <input\n        type=\"submit\"\n        name=\"save\"\n        id=\"id_save-requests\"\n        value=\"Save Requests\" />\n    </div>\n  </div>\n</div>\n</form>",
    "<script>\n  import { recipients, count, request, sources, errors } from './store.js'\n  import RecipientField from './RecipientField.svelte'\n\n  export let idx = 0\n\n  let toggleDisplay = false\n\n  let startUrl = '/api/current-user/'\n  export let states\n\n  let templateJson\n  $: currentRecipient = $recipients[idx]\n  $: templateInfo = getTemplateInfo(currentRecipient, $request)\n  $: currentTemplate = templateJson === undefined ? \"\" : fillTemplate(templateInfo, templateJson)\n  // tie this variable to the *value* of the state to avoid unnecessary XHR requests\n  $: selectedState = currentRecipient.agencyState.value\n  $: if (toggleDisplay) {\n    previewSubmission(selectedState || \"US\")\n  }\n\n  function getTemplateInfo(recipientItem, requestItem) {\n    let templateData = {}\n    for (const field of Object.keys(recipientItem)) {\n      templateData[field] = recipientItem[field].value\n    }\n    for (const field of Object.keys(requestItem)) {\n      templateData[field] = requestItem[field].value\n    }\n    const recipientName = `${templateData['recipientFirstName']} ${templateData['recipientLastName']}`\n    templateData['recipientName'] =\n      recipientName.trim() === ''\n        ? 'Public Records Officer'\n        : recipientName.trim()\n    return templateData\n  }\n\n  function fillTemplate(jsonData, templateData) {\n    let lastIdx = 0\n    let templateText = ''\n    for (let tag of templateData.template) {\n      templateText += templateData.boilerplate.slice(lastIdx, tag.position)\n      const jsonItem = jsonData[tag.field]\n      templateText +=\n        jsonItem === undefined ? templateData[tag.field] : jsonItem\n      lastIdx = tag.position\n    }\n    templateText += templateData.boilerplate.slice(\n      lastIdx,\n      templateData.boilerplate.length\n    )\n    return templateText\n  }\n\n  async function previewSubmission(submissionState) {\n    const templateURL = startUrl + 'template/' + submissionState\n    const resp = await fetch(templateURL)\n      .then((response) => response.json())\n      .catch((err) => {\n        console.error(err)\n      })\n    templateJson = resp\n  }\n\n  async function togglePreview(event) {\n    toggleDisplay = !toggleDisplay\n    // if (toggleDisplay) {\n    //   previewSubmission(event)\n    // }\n  }\n\n  function addRecipient() {\n    recipients.addItem()\n    sources.addItem()\n    errors.addItem()\n  }\n\n  function deleteRecipient() {\n    recipients.deleteItem(idx)\n    sources.deleteItem(idx)\n    errors.deleteItem(idx)\n  }\n</script>\n\n<style>\n  .recipient__item {\n    border: 1px dashed rgb(207, 207, 207);\n    border-radius: 5px;\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 10px;\n    color: black;\n  }\n\n  .agency__general,\n  .agency__street {\n    display: flex;\n  }\n\n  .new__items {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  button {\n    border-radius: 1px;\n    border: none;\n    cursor: pointer;\n    background-color: rgba(255, 202, 122, 1);\n    margin: 10px;\n    padding: 1px;\n  }\n\n  button:hover,\n  button:focus {\n    background-color: #c27400;\n    color: white;\n    border-color: transparent;\n  }\n\n  .expand__preview button {\n    padding: 5px;\n  }\n\n  .template__preview {\n    white-space: pre-wrap;\n    width: 85%;\n    margin: auto;\n    padding: 5%;\n    padding-top: 5px;\n    padding-bottom: 5px;\n    border-top: 1px solid black;\n  }\n\n  .hidden {\n    display: none;\n  }\n</style>\n\n<div class=\"recipient__item\" id=\"recipient-{idx}\">\n  <div class=\"recipient__person\">\n    <RecipientField {idx} fieldKey=\"recipientFirstName\" />\n    <RecipientField {idx} fieldKey=\"recipientLastName\" />\n  </div>\n  <div class=\"agency__general\">\n    <RecipientField {idx} fieldKey=\"agencyName\" required={true}/>\n    <RecipientField\n      {idx}\n      fieldKey=\"foiaEmail\"\n      fieldType=\"email\"\n      required={true} />\n    {#await states then options}\n      <RecipientField\n        {idx}\n        fieldKey=\"agencyState\"\n        fieldType=\"select\"\n        required={true}\n        {options} />\n    {/await}\n  </div>\n  <div class=\"agency__street\">\n    <RecipientField {idx} fieldKey=\"agencyStreetAddress\" />\n    <RecipientField {idx} fieldKey=\"agencyZip\" />\n    <RecipientField {idx} fieldKey=\"agencyMunicipality\" />\n  </div>\n  <div class=\"new__items\">\n    <div class=\"add__item\">\n      {#if idx === $count - 1}\n        <button type=\"button\" id=\"add-{idx}\" on:click={addRecipient} aria-label=\"Add Item\">\n          <svg\n            role=\"img\"\n            width=\"25px\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            class=\"plus w-6 h-6\"><title>Add New Item</title>\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\"\n              clip-rule=\"evenodd\" /></svg>\n        </button>\n      {/if}\n    </div>\n    <div class=\"delete__item\">\n      {#if $count > 1}\n        <button\n          type=\"button\"\n          id=\"delete-{idx}\"\n          on:click={deleteRecipient(idx)}\n          aria-label=\"Delete Item\">\n          <svg\n            role=\"img\"\n            width=\"25px\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            class=\"x w-6 h-6\"><title>Delete This Item</title>\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n              clip-rule=\"evenodd\" /></svg>\n        </button>\n      {/if}\n    </div>\n  </div>\n  <div class=\"expand__preview\">\n    {#if !toggleDisplay}\n      <button type=\"button\" id=\"expand-{idx}\" on:click={togglePreview}>Preview Request</button>\n      <div id=\"template-{idx}\" class=\"template__preview hidden\">\n        {currentTemplate}\n      </div>\n    {:else}\n      <button type=\"button\" id=\"expand-{idx}\" on:click={togglePreview}>Hide Preview</button>\n      <div id=\"template-{idx}\" class=\"template__preview\">{currentTemplate}</div>\n    {/if}\n  </div>\n</div>\n",
    "<script>\n  import { recipients, start, sources, errors } from './store.js'\n\n  export let idx = 0\n  export let fieldKey = 'recipientFirstName'\n  export let fieldType = 'text'\n  export let options = []\n  export let required = false\n  let autocompleteSelected\n  let agencies = []\n  // just show top 5 agencies\n  $: isAgencyField = fieldKey.startsWith('agency') || fieldKey === 'foiaEmail'\n  $: firstAgencies = agencies.slice(0, 5)\n\n  $: idField = `id_${fieldKey}-${idx}`\n  $: autocompleteField = `autocomplete_${fieldKey}-${idx}`\n  $: nameField = `${fieldKey}-${idx}`\n  $: fieldVal = $recipients[idx][fieldKey].value\n  $: selectVal =\n    fieldType === 'select' && options.length > 0 && fieldVal === ''\n      ? options[0].abbr\n      : fieldVal\n  $: errorInfo = $errors.recipientErrors[idx][fieldKey]\n\n  async function updateAndQuery(event) {\n    updateStore(event)\n    if (isAgencyField) {\n      let agencyUrl = '/api/current-user/autocomplete/agencies'\n      const agencyResults = await fetch(\n        `${agencyUrl}?field=${fieldKey}&q=${event.target.value}`\n      )\n        .then((response) => response.json())\n        .then((data) => data.results)\n        .catch((err) => {\n          console.error(err)\n        })\n      agencies = event.target.value === '' ? [] : agencyResults\n    }\n  }\n\n  function updateStore(event) {\n    const newVal = event.target.value\n    recipients.changeItem($recipients, idx, fieldKey, newVal)\n  }\n\n  async function autocompleteKeydown(event) {\n    switch (event.code) {\n      case 'ArrowDown':\n        if (autocompleteSelected === undefined) {\n          autocompleteSelected = 0\n        } else if (autocompleteSelected < firstAgencies.length - 1) {\n          autocompleteSelected += 1\n        } else {\n          autocompleteSelected = undefined\n        }\n        break\n      case 'ArrowUp':\n        if (autocompleteSelected === undefined) {\n          autocompleteSelected = firstAgencies.length - 1\n        } else if (autocompleteSelected === 0) {\n          autocompleteSelected = undefined\n        } else {\n          autocompleteSelected -= 1\n        }\n        break\n      case 'Enter':\n        // ordinarily this is a bad idea https://www.tjvantoll.com/2013/01/01/enter-should-submit-forms-stop-messing-with-that/\n        // but here it's necessary to allow predictable keyboard use of the autocomplete\n        event.preventDefault()\n        if (autocompleteSelected !== undefined) {\n          updateData()\n        }\n        break\n    }\n  }\n\n  async function autocompleteClick(event) {\n    autocompleteSelected = parseInt(event.target.id.match(/[0-9]$/g))\n    updateData()\n  }\n\n  async function updateData() {\n    if (isAgencyField) updateRecipient()\n    else updateSource()\n  }\n\n  async function updateRecipient() {\n    const selectedItem = firstAgencies[autocompleteSelected]\n    for (let inputField of Object.keys(selectedItem)) {\n      recipients.changeItem(\n        $recipients,\n        idx,\n        inputField,\n        selectedItem[inputField]\n      )\n    }\n    const praEmail = $recipients[idx].foiaEmail.value\n    const agencySources = await fetch(\n      `/api/current-user/autocomplete/sources?agency=${praEmail}`\n    )\n      .then((response) => response.json())\n      .then((data) => data.results)\n      .catch((err) => {\n        console.error(err)\n      })\n    sources.newSources(idx, agencySources)\n    agencies = []\n    autocompleteSelected = undefined\n  }\n\n  function updateSource() {\n    const selectedItem = $sources[idx][autocompleteSelected]\n    recipients.changeItem(\n      $recipients,\n      idx,\n      'recipientFirstName',\n      selectedItem.firstName\n    )\n    recipients.changeItem(\n      $recipients,\n      idx,\n      'recipientLastName',\n      selectedItem.lastName\n    )\n    // reset source list\n    sources.newSources(idx, [])\n    autocompleteSelected = undefined\n  }\n</script>\n\n<style>\n  .form__field {\n    width: 33%;\n  }\n\n  input,\n  select {\n    width: 95%;\n    margin-top: 5px;\n    border: 1px solid rgb(217, 217, 217);\n    padding: 5px;\n    font-size: 1rem;\n  }\n\n  select {\n    background-image: url('../images/down-arrow.svg');\n    background-repeat: no-repeat;\n    background-position: 100% 50%;\n    appearance: none;\n    -moz-appearance: none;\n    -webkit-appearance: none;\n  }\n\n  input:focus,\n  select:focus {\n    background-color: rgb(217, 217, 217);\n    border-color: #ce6969;\n  }\n\n  label {\n    display: block;\n    padding-top: 6px;\n  }\n\n  .recipient__error {\n    font-size: 1.2rem;\n    text-align: left;\n  }\n\n  :global(span.optional) {\n    color: rgb(103, 103, 103);\n    font-weight: normal;\n  }\n\n  :global(span.required) {\n    color: #ce6969;\n  }\n\n  :global(span.optional::after) {\n    content: ' (Optional)';\n  }\n\n  :global(span.required::after) {\n    content: ' (Required)';\n  }\n\n  .selected,\n  .autocomplete__item:hover,\n  .autocomplete__item:focus {\n    background-color: rgb(187, 187, 187);\n  }\n\n  .autocomplete__item:hover,\n  .autocomplete__item:focus {\n    cursor: pointer;\n  }\n\n  .autocomplete__results {\n    width: 95%;\n    padding: 5px;\n    border: 1px solid rgb(187, 187, 187);\n  }\n</style>\n\n<div class=\"form__field\">\n  <label for={idField}>\n    {start[fieldKey].text}\n    <span class:optional={!required} class:required />\n    {#if errorInfo}\n    <div class=\"recipient__errors\">\n      {#each errorInfo as err}\n      <div class=\"recipient__error form__error__item\">{err}</div>\n      {/each}\n    </div>\n    {/if}\n  </label>\n  {#if fieldType === 'select'}\n    <select\n      on:blur={updateStore}\n      id={idField}\n      name={nameField}\n      value={selectVal}>\n      {#each options as option}\n        <option value={option.abbr}>{option.name}</option>\n      {/each}\n    </select>\n  {:else}\n    <div class=\"text__container\">\n      {#if firstAgencies.length > 0}\n        <div class=\"sr-only\" role=\"status\" aria-live=\"polite\">\n          There are {firstAgencies.length} matching agencies. Use the arrow keys\n          to browse.\n        </div>\n      {/if}\n      {#if isAgencyField}\n        <input\n          on:keydown={autocompleteKeydown}\n          on:input={updateAndQuery}\n          id={idField}\n          name={nameField}\n          value={fieldVal}\n          autocomplete=\"off\"\n          aria-autocomplete=\"list\" />\n        {#if firstAgencies.length > 0}\n          <div class=\"autocomplete__results\">\n            <div class=\"autocomplete__list\" role=\"listbox\" tabindex=\"-1\">\n              {#each firstAgencies as agency, i}\n                {#if autocompleteSelected === i}\n                  <div\n                    on:click={autocompleteClick}\n                    class=\"autocomplete__item selected\"\n                    aria-selected=\"true\"\n                    id={`${autocompleteField}-${i}`}\n                    role=\"option\"\n                    tabindex=\"-1\">\n                    {agency['agencyName']}\n                  </div>\n                {:else}\n                  <div\n                    on:click={autocompleteClick}\n                    class=\"autocomplete__item\"\n                    id={`${autocompleteField}-${i}`}\n                    role=\"option\"\n                    tabindex=\"-1\">\n                    {agency['agencyName']}\n                  </div>\n                {/if}\n              {/each}\n            </div>\n          </div>\n        {/if}\n      {:else}\n        <input\n          on:keydown={autocompleteKeydown}\n          on:input={updateAndQuery}\n          id={idField}\n          name={nameField}\n          value={fieldVal}\n          autocomplete=\"off\"\n          aria-autocomplete=\"list\" />\n        {#if $sources[idx].length > 0}\n          <div class=\"autocomplete__results\">\n            <div class=\"autocomplete__list\" role=\"listbox\" tabindex=\"-1\">\n              {#each $sources[idx] as source, i}\n                {#if autocompleteSelected === i}\n                  <div\n                    on:click={autocompleteClick}\n                    class=\"autocomplete__item selected\"\n                    aria-selected=\"true\"\n                    id={`${autocompleteField}-${i}`}\n                    role=\"option\"\n                    tabindex=\"-1\">\n                    {source['name']}\n                  </div>\n                {:else}\n                  <div\n                    on:click={autocompleteClick}\n                    class=\"autocomplete__item\"\n                    id={`${autocompleteField}-${i}`}\n                    role=\"option\"\n                    tabindex=\"-1\">\n                    {source['name']}\n                  </div>\n                {/if}\n              {/each}\n            </div>\n          </div>\n        {/if}\n      {/if}\n    </div>\n  {/if}\n</div>\n",
    "<script>\n  import { request, errors } from './store.js'\n\n  $: requestErrors = $errors.requestErrors\n  $: subjectErrors = requestErrors.subject\n  $: recordsErrors = requestErrors.requestedRecords\n  $: expeditedErrors = requestErrors.expeditedProcessing\n  $: feeWaiverErrors = requestErrors.feeWaiver\n\n  function adjustHeight(event) {\n    const elem = event.target\n    // change the height of element if it overflows\n    if (elem.clientHeight < elem.scrollHeight) {\n      elem.style.height = elem.scrollHeight + 20 + 'px'\n    }\n  }\n\n  function handleInput(event, field) {\n    request.update((n) => {\n      n[field].value = event.target.value\n      return n\n    })\n  }\n\n  function textAreaInput(event, field) {\n    handleInput(event, field)\n    adjustHeight(event)\n  }\n</script>\n\n<style>\n  .request__container {\n    padding: 10px;\n    margin-bottom: 10px;\n    border-radius: 5px;\n    border: 1px dashed rgb(207, 207, 207);\n  }\n\n  textarea {\n    resize: none;\n    overflow: hidden;\n    box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    width: 80%;\n  }\n\n  input,\n  textarea {\n    text-align: left;\n    font-size: 1.2rem;\n  }\n\n  input:focus,\n  textarea:focus {\n    background-color: rgb(217, 217, 217);\n    border: 1px solid #ce6969;\n  }\n\n  label {\n    color: black;\n    margin-bottom: 2px;\n    font-size: 1.2rem;\n    display: block;\n    padding-top: 6px;\n  }\n\n  span.optional {\n    color: rgb(103, 103, 103);\n    font-weight: normal;\n  }\n\n  input {\n    width: 50%;\n  }\n\n  .request__error {\n    font-size: 1.2rem;\n    text-align: left;\n  }\n</style>\n\n<div id=\"request\" class=\"request__container\">\n  <div class=\"subject__line\">\n    <label for=\"id_subject-line\">\n      Subject\n      <span class=\"required\" />\n      {#if subjectErrors}\n    <div class=\"request__errors\">\n      {#each subjectErrors as err}\n      <div class=\"request__error form__error__item\">{err}</div>\n      {/each}\n    </div>\n    {/if}\n    </label>\n    <input\n      on:input={(e) => handleInput(e, 'subject')}\n      type=\"text\"\n      id=\"id_subject-line\"\n      name=\"subject\" />\n  </div>\n  <div class=\"records\">\n    <label for=\"id_requestedRecords\">\n      Records Sought\n      <span class=\"required\" />\n      {#if recordsErrors}\n    <div class=\"request__errors\">\n      {#each recordsErrors as err}\n      <div class=\"request__error form__error__item\">{err}</div>\n      {/each}\n    </div>\n    {/if}\n    </label>\n    <textarea\n      on:input={(e) => textAreaInput(e, 'requestedRecords')}\n      id=\"id_requestedRecords\"\n      name=\"requestedRecords\" />\n  </div>\n  <div class=\"fee-waiver\">\n    <label for=\"id_feeWaiver\">Fee Waiver Justification<span class=\"optional\" /></label>\n    {#if feeWaiverErrors}\n    <div class=\"request__errors\">\n      {#each feeWaiverErrors as err}\n      <div class=\"request__error form__error__item\">{err}</div>\n      {/each}\n    </div>\n    {/if}\n    <textarea\n      on:input={(e) => textAreaInput(e, 'feeWaiver')}\n      id=\"id_feeWaiver\"\n      name=\"feeWaiver\" />\n  </div>\n  <div class=\"expedited-processing\">\n    <label for=\"id_expeditedProcessing\">Justification for Expedited Processing<span class=\"optional\" /></label>\n    {#if expeditedErrors}\n    <div class=\"request__errors\">\n      {#each expeditedErrors as err}\n      <div class=\"request__error form__error__item\">{err}</div>\n      {/each}\n    </div>\n    {/if}\n    <textarea\n      on:input={(e) => textAreaInput(e, 'expeditedProcessing')}\n      id=\"id_expeditedProcessing\"\n      name=\"expeditedProcessing\" />\n  </div>\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}